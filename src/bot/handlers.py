import telebot
import os
from dotenv import load_dotenv
from telebot.types import Message

from src.core.dice_roller import DiceRoller
from src.core.character_generator import CharacterGenerator
from src.database.sqlite_db import CharacterDatabase
from src.bot.keyboards import CharacterKeyboards

load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')
bot = telebot.TeleBot(BOT_TOKEN)

db = CharacterDatabase()
user_characters = {}

@bot.message_handler(commands=['start'])
def send_welcome(message: Message):
    bot.reply_to(
        message, 
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è D&D. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", 
        reply_markup=CharacterKeyboards.main_menu()
    )

@bot.message_handler(func=lambda m: m.text == "üé≤ –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞")
def dice_roll_handler(message: Message):
    bot.reply_to(message, "–ö–∞–∫–æ–π –±—Ä–æ—Å–æ–∫? (–ù–∞–ø—Ä–∏–º–µ—Ä, 2d6+3)")

@bot.message_handler(func=lambda m: 'd' in m.text.lower())
def process_dice_roll(message: Message):
    try:
        result = DiceRoller.roll(message.text)
        response = (
            f"üé≤ –ë—Ä–æ—Å–æ–∫ {result['notation']}:\n"
            f"–ë—Ä–æ—Å–∫–∏: {result['rolls']}\n"
            f"–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {result['modifier']}\n"
            f"–ò—Ç–æ–≥–æ: {result['total']}"
        )
        bot.reply_to(message, response)
    except ValueError as e:
        bot.reply_to(message, str(e))

@bot.message_handler(func=lambda m: m.text == "üßô –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
def create_character(message: Message):
    ability_scores = DiceRoller.roll_ability_scores()
    character = CharacterGenerator.generate_character(ability_scores)
    
    user_characters[message.from_user.id] = character
    db.save_character(message.from_user.id, character)

    response = (
        f"üìú –°–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂:\n"
        f"–ò–º—è: {character['name']}\n"
        f"–†–∞—Å–∞: {character['race']}\n"
        f"–ö–ª–∞—Å—Å: {character['class']}\n"
        f"–£—Ä–æ–≤–µ–Ω—å: {character['level']}"
    )
    bot.reply_to(
        message, 
        response, 
        reply_markup=CharacterKeyboards.character_actions()
    )

@bot.message_handler(func=lambda m: m.text == "üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
def show_character_stats(message: Message):
    character = user_characters.get(message.from_user.id)
    if not character:
        character = db.load_character(message.from_user.id)

    if character:
        stats = "\n".join([
            f"{stat}: {value}" 
            for stat, value in character['ability_scores'].items()
        ])
        bot.reply_to(message, f"üß¨ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n{stats}")
    else:
        bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")

@bot.message_handler(func=lambda m: m.text == "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
def show_inventory(message: Message):
    character = user_characters.get(message.from_user.id)
    if not character:
        character = db.load_character(message.from_user.id)

    if character:
        inventory = character.get('inventory', [])
        if inventory:
            inv_list = "\n".join(inventory)
            bot.reply_to(message, f"üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:\n{inv_list}")
        else:
            bot.reply_to(message, "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç!")
    else:
        bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")

@bot.message_handler(func=lambda m: m.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç")
def add_inventory_item(message: Message):
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞:")
    bot.register_next_step_handler(message, process_item_addition)

def process_item_addition(message: Message):
    character = user_characters.get(message.from_user.id)
    if not character:
        character = db.load_character(message.from_user.id)

    if character:
        item = message.text
        if 'inventory' not in character:
            character['inventory'] = []
        character['inventory'].append(item)
        
        user_characters[message.from_user.id] = character
        db.save_character(message.from_user.id, character)
        
        bot.reply_to(
            message, 
            f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{item}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!", 
            reply_markup=CharacterKeyboards.character_actions()
        )
    else:
        bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")

def start_bot():
    print("ü§ñ D&D –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
